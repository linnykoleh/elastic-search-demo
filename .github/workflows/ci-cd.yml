name: CI/CD Pipeline for Elasticsearch and EC2 Deployment

on: push

jobs:
  build-and-load:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
        ports:
          - 9200:9200
        options: >-
          --health-cmd="curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=12
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install elasticsearch

      - name: Verify Elasticsearch Health
        run: |
          curl -X GET "http://localhost:9200/_cluster/health?pretty"

      - name: Load Data into Elasticsearch
        run: |
          python WordsGenerator.py

  deploy:
    needs: build-and-load
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install SSH Key and Verify
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and Install Dependencies on EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          APP_PATH: ${{ secrets.APP_PATH }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $USER@$HOST "
            mkdir -p $APP_PATH &&
            sudo yum install python3-pip -y &&
            python3 -m pip install virtualenv &&
            cd $APP_PATH &&
            virtualenv venv &&
            source venv/bin/activate &&
            pip install elasticsearch &&
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          "

      - name: Restart Service on EC2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd $APP_PATH &&
            sudo systemctl restart projector_elastic.service
          "
